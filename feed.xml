<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-08-28T15:08:33+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">BLog</title><subtitle>Bin Liang's Tech Blog</subtitle><author><name>liangbin</name></author><entry xml:lang="en"><title type="html">Gmail Aliasing</title><link href="http://0.0.0.0:4000/portfolio/posts/gmail-aliasing" rel="alternate" type="text/html" title="Gmail Aliasing" /><published>2020-08-28T00:00:00+00:00</published><updated>2020-08-28T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Gmail-Aliasing</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/gmail-aliasing">&lt;p&gt;Email aliasing is a good solution for online privacy and email organization without using multiple Email accounts.&lt;/p&gt;

&lt;p&gt;Yahoo mail alias can be configured directly in setup, but Gmail alias seems no where to be found.&lt;/p&gt;

&lt;p&gt;Here is a hidden feature I found which realizes Gmail aliasing in an interesting way:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Appending ANY suffix with “+” to your Gmail ID effectively creates an alias&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For example, assume my Gmail address is myname@gmail.com, then I can use following Gmail addresses as alias of my main account:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;myname+notification@gmail.com&lt;/li&gt;
  &lt;li&gt;myname+vip@gmail.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try it and enjoy!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Exploration" /><category term="Practice" /><summary type="html">Email aliasing is a good solution for online privacy and email organization without using multiple Email accounts. Yahoo mail alias can be configured directly in setup, but Gmail alias seems no where to be found. Here is a hidden feature I found which realizes Gmail aliasing in an interesting way: Appending ANY suffix with “+” to your Gmail ID effectively creates an alias For example, assume my Gmail address is myname@gmail.com, then I can use following Gmail addresses as alias of my main account: myname+notification@gmail.com myname+vip@gmail.com Try it and enjoy!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Fugaku TofuD Interconnect Study</title><link href="http://0.0.0.0:4000/portfolio/posts/fugaku-tofud-interconnect-study" rel="alternate" type="text/html" title="Fugaku TofuD Interconnect Study" /><published>2020-06-25T00:00:00+00:00</published><updated>2020-06-25T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Fugaku-TofuD-Interconnect-Study</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/fugaku-tofud-interconnect-study">&lt;h2 id=&quot;fugaku-tofud-interconnect-study&quot;&gt;Fugaku TofuD Interconnect Study&lt;/h2&gt;

&lt;p&gt;Draft – Coming soon!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">Fugaku TofuD Interconnect Study Draft – Coming soon!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Fugaku is the new King</title><link href="http://0.0.0.0:4000/portfolio/posts/fugaku-is-the-new-king" rel="alternate" type="text/html" title="Fugaku is the new King" /><published>2020-06-23T00:00:00+00:00</published><updated>2020-06-23T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Fugaku-Is-The-New-King</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/fugaku-is-the-new-king">&lt;h2 id=&quot;fugaku-is-the-new-king&quot;&gt;Fugaku is the new King&lt;/h2&gt;

&lt;p&gt;The biggest &lt;strong&gt;&lt;em&gt;GOOD&lt;/em&gt;&lt;/strong&gt; news in IT industry this year must be the announcement of Fugaku supercomputer in earlier June, taking the top spot on the Top500 list, a ranking of the world’s fastest supercomputers. It also swept the other rankings of supercomputer performance, taking first place on the HPCG, a ranking of supercomputers running real-world applications, HPL-AI, which ranks supercomputers based on their performance capabilities for tasks typically used in artificial intelligence applications, and Graph 500, which ranks systems based on data-intensive loads. This is the first time in history that the same supercomputer has become No.1 on Top500, HPCG, and Graph500 simultaneously.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/fugaku.jpeg&quot;&gt;&lt;/a&gt;
Why am I so excited about Fugaku and use this news as my opening post for a new HPC series?&lt;/p&gt;

&lt;p&gt;The concept of Fugaku is proposed 10 years ago and the project started around 2014. Its concept is not brand new but significant design and packaging improvements are applied over its predecessors. These changes and improvements reflected some of most heated debate/discussions in HPC industry and can serve very well as testimony in these topics.&lt;/p&gt;

&lt;p&gt;A few key differentiation factors of interest are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ARM v8 SVE instruction set vs Fujitsu’s traditional SPARC solution vs Intel x86&lt;/li&gt;
  &lt;li&gt;48 low Freq/low power cores per CPU vs less core with higher Freq/power per CPU&lt;/li&gt;
  &lt;li&gt;HBM vs DDR4/GDDR6&lt;/li&gt;
  &lt;li&gt;6D Mesh/Torus interconnect topology vs Blue Gene’s 5D Torus vs Summit’s Fat-Tree&lt;/li&gt;
  &lt;li&gt;3D stacked memory vs integrated memory on chip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why am I even interested about HPC/Supercomputer, as a networking (in macro way) guy?&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Supercomputer/HPC is technology driver for computing industry, especially in packaging and interconnect.&lt;/li&gt;
  &lt;li&gt;Converged compute, storage and interconnect co-design is deep in its gene for supercomputer/HPC&lt;/li&gt;
  &lt;li&gt;Boundary between HPC and non-HPC applications has blurred in recent years, especially with AI and IoT applications, making HPC solutions very relevant to general purpose compute infrastructure like DC and edge.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the following posts in this series, I will dig deeper into above areas and reflect the knowledge into the more generic NCS discussions, stay tuned friends!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">Fugaku is the new King The biggest GOOD news in IT industry this year must be the announcement of Fugaku supercomputer in earlier June, taking the top spot on the Top500 list, a ranking of the world’s fastest supercomputers. It also swept the other rankings of supercomputer performance, taking first place on the HPCG, a ranking of supercomputers running real-world applications, HPL-AI, which ranks supercomputers based on their performance capabilities for tasks typically used in artificial intelligence applications, and Graph 500, which ranks systems based on data-intensive loads. This is the first time in history that the same supercomputer has become No.1 on Top500, HPCG, and Graph500 simultaneously. Why am I so excited about Fugaku and use this news as my opening post for a new HPC series? The concept of Fugaku is proposed 10 years ago and the project started around 2014. Its concept is not brand new but significant design and packaging improvements are applied over its predecessors. These changes and improvements reflected some of most heated debate/discussions in HPC industry and can serve very well as testimony in these topics. A few key differentiation factors of interest are: ARM v8 SVE instruction set vs Fujitsu’s traditional SPARC solution vs Intel x86 48 low Freq/low power cores per CPU vs less core with higher Freq/power per CPU HBM vs DDR4/GDDR6 6D Mesh/Torus interconnect topology vs Blue Gene’s 5D Torus vs Summit’s Fat-Tree 3D stacked memory vs integrated memory on chip Why am I even interested about HPC/Supercomputer, as a networking (in macro way) guy? Supercomputer/HPC is technology driver for computing industry, especially in packaging and interconnect. Converged compute, storage and interconnect co-design is deep in its gene for supercomputer/HPC Boundary between HPC and non-HPC applications has blurred in recent years, especially with AI and IoT applications, making HPC solutions very relevant to general purpose compute infrastructure like DC and edge. In the following posts in this series, I will dig deeper into above areas and reflect the knowledge into the more generic NCS discussions, stay tuned friends!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Reflection on Data Fidelity</title><link href="http://0.0.0.0:4000/portfolio/posts/reflection-on-data-fidelity" rel="alternate" type="text/html" title="Reflection on Data Fidelity" /><published>2020-06-20T00:00:00+00:00</published><updated>2020-06-20T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Reflection-On-Data-Fidelity</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/reflection-on-data-fidelity">&lt;blockquote&gt;
  &lt;p&gt;“To be, or not to be? That is the question”&lt;br /&gt;
   ― &lt;em&gt;William Shakespeare, Hamlet&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;reflection-on-data-fidelity&quot;&gt;Reflection on Data Fidelity&lt;/h2&gt;

&lt;p&gt;Is data communication or more specific, computer networking, science or art?
Is the world analog or digital?&lt;/p&gt;

&lt;p&gt;Ever since computer started taking charge of our life, everything started the transformation of digitization, sooner or later. It makes everything easier to quantify, measure, compute and transport and is truly the foundation for the information revolution.&lt;/p&gt;

&lt;p&gt;Many years of engineering training and over 20 years of professional practice in data communication industry, it has become my second nature to think and view things in 0s and 1s, black or white, right or wrong. Everything becomes easier and manageable this way and you can really feel the power to change the world. As we immersing deeper and deeper into this digital world we help created, I realized one day that something is not right, I started to get confused about the truth vs lie, fact vs fiction, and more importantly, purpose vs meaning.&lt;/p&gt;

&lt;p&gt;Rethinking what is the purpose of data communication, is it really just sending data from A to B accurately, efficiently and in an timely manner?&lt;/p&gt;

&lt;p&gt;I would say that’s mostly (will elaborate more later) true among digital computers, but surely not totally true for human beings.&lt;/p&gt;

&lt;p&gt;For human beings, digitalization is never by nature. Our brains doesn’t work like digital computer and our perception system is NOT in binary. Our sensing system works continuously within its functional spectrum, our intelligence system takes infinite inputs and everyone evolves into unique beautiful beings. One of my hobby is working on my HiFi system and one of lessons I learnt from it is that digital processing and amplification does create lots of fun and flexibility, it &lt;strong&gt;NEVER&lt;/strong&gt; sounds as nature as an analog system. 0s and 1s does reduces ambiguity within the player/receiver/amp but it’s not the fidelity we human being want as listener. From this example, clearly we can see the digital data communication system we use today has &lt;strong&gt;three&lt;/strong&gt; fundamental functions:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;A/D and D/A transformation at input and output to inject the digital system into a naturally analog world&lt;/li&gt;
  &lt;li&gt;Digital processing, such as encapsulation, multiplexing, encoding etc&lt;/li&gt;
  &lt;li&gt;Recording or transportation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Traditionally, data communication industry focuses on function 2 and 3 above and leaves function 1 to human-machine interface devices like computer and mobile devices. Taking the HiFi case as an example, function 1 decides the fidelity of music we hear out of the system no matter how well we do in function 2 and 3. As a matter of fact, regarding to fidelity, the best we can do in function 2 and 3 is to reduce the degradation to &lt;strong&gt;ZERO&lt;/strong&gt;. Yeah, that is pathetic but it’s exactly the problem we have in this industry. For too long we have buried our head in sand building pipes, eventually we lost our sight for the purpose of communication. We struggle on pushing towards Shannon’s Theorem limit, building more and more, fatter and fatter data pipes, from deep sea to outer space but still, we see no future to meet the mounting demands.&lt;/p&gt;

&lt;p&gt;It’s time to drop the wrench and rethink hard on the purpose for communication, which fidelity we should be focusing on now. Here are a few questions worth asking ourselves:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Garbage in, garbage out - should we care &lt;strong&gt;A LOT&lt;/strong&gt; on what to communicate, aka &lt;strong&gt;the input&lt;/strong&gt;, in stead of just making sure transport “garbages” in high fidelity?&lt;/li&gt;
  &lt;li&gt;Do we communicate the **RIGHT” information, no more and no less, over the communication system? Instead of trying to beat the Shannon limit, shouldn’t we change the battle field rethinking what should be the “Information” we feed into the pipes as a better approach?&lt;/li&gt;
  &lt;li&gt;Can we make the &lt;strong&gt;RIGHT&lt;/strong&gt; communication choice when communication system is peripheralized from the rest of information processing systems, namely compute and storage?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Think of an interactive Holographic Telepresence scheme, which transports only 100s Mbps meta data in stead of 100-1000s Gbps encoded 3D data, that is 3-4 orders of magnitude reduction in both bandwidth and latency demand to the communication system, making it a much achievable goal.&lt;/p&gt;

&lt;p&gt;This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">“To be, or not to be? That is the question”    ― William Shakespeare, Hamlet Reflection on Data Fidelity Is data communication or more specific, computer networking, science or art? Is the world analog or digital? Ever since computer started taking charge of our life, everything started the transformation of digitization, sooner or later. It makes everything easier to quantify, measure, compute and transport and is truly the foundation for the information revolution. Many years of engineering training and over 20 years of professional practice in data communication industry, it has become my second nature to think and view things in 0s and 1s, black or white, right or wrong. Everything becomes easier and manageable this way and you can really feel the power to change the world. As we immersing deeper and deeper into this digital world we help created, I realized one day that something is not right, I started to get confused about the truth vs lie, fact vs fiction, and more importantly, purpose vs meaning. Rethinking what is the purpose of data communication, is it really just sending data from A to B accurately, efficiently and in an timely manner? I would say that’s mostly (will elaborate more later) true among digital computers, but surely not totally true for human beings. For human beings, digitalization is never by nature. Our brains doesn’t work like digital computer and our perception system is NOT in binary. Our sensing system works continuously within its functional spectrum, our intelligence system takes infinite inputs and everyone evolves into unique beautiful beings. One of my hobby is working on my HiFi system and one of lessons I learnt from it is that digital processing and amplification does create lots of fun and flexibility, it NEVER sounds as nature as an analog system. 0s and 1s does reduces ambiguity within the player/receiver/amp but it’s not the fidelity we human being want as listener. From this example, clearly we can see the digital data communication system we use today has three fundamental functions: A/D and D/A transformation at input and output to inject the digital system into a naturally analog world Digital processing, such as encapsulation, multiplexing, encoding etc Recording or transportation Traditionally, data communication industry focuses on function 2 and 3 above and leaves function 1 to human-machine interface devices like computer and mobile devices. Taking the HiFi case as an example, function 1 decides the fidelity of music we hear out of the system no matter how well we do in function 2 and 3. As a matter of fact, regarding to fidelity, the best we can do in function 2 and 3 is to reduce the degradation to ZERO. Yeah, that is pathetic but it’s exactly the problem we have in this industry. For too long we have buried our head in sand building pipes, eventually we lost our sight for the purpose of communication. We struggle on pushing towards Shannon’s Theorem limit, building more and more, fatter and fatter data pipes, from deep sea to outer space but still, we see no future to meet the mounting demands. It’s time to drop the wrench and rethink hard on the purpose for communication, which fidelity we should be focusing on now. Here are a few questions worth asking ourselves: Garbage in, garbage out - should we care A LOT on what to communicate, aka the input, in stead of just making sure transport “garbages” in high fidelity? Do we communicate the **RIGHT” information, no more and no less, over the communication system? Instead of trying to beat the Shannon limit, shouldn’t we change the battle field rethinking what should be the “Information” we feed into the pipes as a better approach? Can we make the RIGHT communication choice when communication system is peripheralized from the rest of information processing systems, namely compute and storage? Think of an interactive Holographic Telepresence scheme, which transports only 100s Mbps meta data in stead of 100-1000s Gbps encoded 3D data, that is 3-4 orders of magnitude reduction in both bandwidth and latency demand to the communication system, making it a much achievable goal. This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Reflection on Network Intelligence</title><link href="http://0.0.0.0:4000/portfolio/posts/reflection-on-network-intelligence" rel="alternate" type="text/html" title="Reflection on Network Intelligence" /><published>2020-06-11T00:00:00+00:00</published><updated>2020-06-11T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Reflection-On-Network-Intelligence</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/reflection-on-network-intelligence">&lt;h2 id=&quot;reflection-on-network-intelligence&quot;&gt;Reflection on Network Intelligence&lt;/h2&gt;

&lt;p&gt;Remember in my early days in networking industry, Cisco used to fight against Microsoft regarding where the network intelligence should be implemented. Microsoft at the time dominated the PC market and was pushing network features at end-point such as security, acceleration, QoS etc. Network vendors led by Cisco on the other hand wanted to weave most if not all network intelligence into network itself. As we know up till now, similar fights have never ended, just with player and battle fields changes. Unfortunately, this left us some confusing products and terms we still have to deal with up till now, such as UTM devices in the network but truly not a networking device, and over-kill TCP/IP stack deployed among end-points to accommodate worst network scenario where they are actually communicate in a close proximity LAN environment.&lt;/p&gt;

&lt;p&gt;Arguments from either sides are valid to certain extent and I’m not making any judgement here. It just suddenly stuck me when I trying to solve a networking issue seemingly unsolvable with conflicting constrains. That is the starting point of my long journey of rethinking some of the basics in the networking industry. For such a long time we have isolate networking from other information technologies such as compute, storage. We define some protocols and implement some network infrastructures based on very &lt;strong&gt;OLD&lt;/strong&gt; assumptions that we networking guys are only responsible to deliver data from A to B fast, reliable and effectively. The additional intelligence we want to baked into network are also for above purposes as well, such as TCP offload, in-network retransmit etc. We never question why we need to do that and unfortunately this holds true for other parts as well.&lt;/p&gt;

&lt;p&gt;About 9 years ago I started moving my knowledge stack up from embedded network design into software defined networking (SDN), Intent Based Networking (IBN) and then networked applications. The higher I goes up the stack, the bigger the scope I can see, both problems and solutions, from interface to network element, to site, to multi-site, to global. During the transition, I learnt that something used to be so important even critical at local becomes irrelevant when looked at from a much bigger picture, such as pursuing zero drop rate at interface level, which has very little impact to application, our ultimate goal.&lt;/p&gt;

&lt;p&gt;Along this line of thinking, I would argue that even if all parts are optimal, the combination may not be optimal. Why? It’s also strongly depends on how we partitioned the original problem, in other words, how parts are divided and their responsibility defined. We know know we need to optimize networking End-to-End to satisfy application needs rather than focus on some intermediate segment. What we also need to know is that there is &lt;strong&gt;NO fixed boundary&lt;/strong&gt; among compute, storage and networking within an application. As I mentioned in the 1st post in &lt;a href=&quot;/portfolio/posts/reflection-on-osi-model&quot;&gt;NCS-Reflection&lt;/a&gt; series, rather than shipping data between compute and storage or between compute units, compute instructions can be shipped or triggered remotely instead under certain circumstance, totally changes the request and requirement for networking part.&lt;/p&gt;

&lt;p&gt;To summarize, I think we should not talk about intelligence or optimization in an isolate matter, either just a network segment or network as a whole alone. Intelligence and optimization all must serve the benefit of application hence must be considered as a whole at application level before dividing into networking or computing portions. There is no need for network to exist if it doesn’t serve the compute and storage, on the other hand, if compute and storage treat networking part of interconnection, like ALU to Registers, CPU Core to memory and I/O systems, the world will just like a super big computer, with interconnection among compute nodes and storage nodes. If applications within a computer can be made agnostic (largely) to computer configuration, we sure can make them fly in this globally abstracted supper computer.&lt;/p&gt;

&lt;p&gt;This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">Reflection on Network Intelligence Remember in my early days in networking industry, Cisco used to fight against Microsoft regarding where the network intelligence should be implemented. Microsoft at the time dominated the PC market and was pushing network features at end-point such as security, acceleration, QoS etc. Network vendors led by Cisco on the other hand wanted to weave most if not all network intelligence into network itself. As we know up till now, similar fights have never ended, just with player and battle fields changes. Unfortunately, this left us some confusing products and terms we still have to deal with up till now, such as UTM devices in the network but truly not a networking device, and over-kill TCP/IP stack deployed among end-points to accommodate worst network scenario where they are actually communicate in a close proximity LAN environment. Arguments from either sides are valid to certain extent and I’m not making any judgement here. It just suddenly stuck me when I trying to solve a networking issue seemingly unsolvable with conflicting constrains. That is the starting point of my long journey of rethinking some of the basics in the networking industry. For such a long time we have isolate networking from other information technologies such as compute, storage. We define some protocols and implement some network infrastructures based on very OLD assumptions that we networking guys are only responsible to deliver data from A to B fast, reliable and effectively. The additional intelligence we want to baked into network are also for above purposes as well, such as TCP offload, in-network retransmit etc. We never question why we need to do that and unfortunately this holds true for other parts as well. About 9 years ago I started moving my knowledge stack up from embedded network design into software defined networking (SDN), Intent Based Networking (IBN) and then networked applications. The higher I goes up the stack, the bigger the scope I can see, both problems and solutions, from interface to network element, to site, to multi-site, to global. During the transition, I learnt that something used to be so important even critical at local becomes irrelevant when looked at from a much bigger picture, such as pursuing zero drop rate at interface level, which has very little impact to application, our ultimate goal. Along this line of thinking, I would argue that even if all parts are optimal, the combination may not be optimal. Why? It’s also strongly depends on how we partitioned the original problem, in other words, how parts are divided and their responsibility defined. We know know we need to optimize networking End-to-End to satisfy application needs rather than focus on some intermediate segment. What we also need to know is that there is NO fixed boundary among compute, storage and networking within an application. As I mentioned in the 1st post in NCS-Reflection series, rather than shipping data between compute and storage or between compute units, compute instructions can be shipped or triggered remotely instead under certain circumstance, totally changes the request and requirement for networking part. To summarize, I think we should not talk about intelligence or optimization in an isolate matter, either just a network segment or network as a whole alone. Intelligence and optimization all must serve the benefit of application hence must be considered as a whole at application level before dividing into networking or computing portions. There is no need for network to exist if it doesn’t serve the compute and storage, on the other hand, if compute and storage treat networking part of interconnection, like ALU to Registers, CPU Core to memory and I/O systems, the world will just like a super big computer, with interconnection among compute nodes and storage nodes. If applications within a computer can be made agnostic (largely) to computer configuration, we sure can make them fly in this globally abstracted supper computer. This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Reflection on OSI Model</title><link href="http://0.0.0.0:4000/portfolio/posts/reflection-on-osi-model" rel="alternate" type="text/html" title="Reflection on OSI Model" /><published>2020-05-31T00:00:00+00:00</published><updated>2020-05-31T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/Reflection-On-OSI-Model</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/reflection-on-osi-model">&lt;h2 id=&quot;reflection-on-osi-model&quot;&gt;Reflection on OSI model&lt;/h2&gt;

&lt;p&gt;In the world of inter-networking, the most popular standard has to be TCP/IP protocol, which forms the basis of the &lt;strong&gt;Internet&lt;/strong&gt; connecting billions of computers and devices around the world. It’s so popular and vital to our daily life now a days that it’s used even when communication is local across compatible networks. For example, popular network file system NFS uses IP protocol even though it’s used mainly in homogenous ethernet LAN environment.&lt;/p&gt;

&lt;p&gt;The software standards like TCP/IP allowing reliable communication without demanding reliable networks is the key enabling technologies for inter-networking. Looking back the standard battle with ATM in 1990s, one key success factor is it’s decomposed layered hierarchy. Each layer taking responsibility for just a portion of the overall communication task. To avoid ambiguous in terms, Open System Interconnect (OSI) model is developed which describes networks as a series of layers:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Layer number&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;layer name&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Main function&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Example protocol&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Application&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Application running over network&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;DNS, Web&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Presentation&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Translate between Application and network format&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Session&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Session lifecycle management across network&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;RPC,named pipes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Transport&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Additional connection below session layer&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TCP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Network&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Translate between logic address/name to physical address&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;IP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Data Link&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Transform between packet and bits&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ethernet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Physical&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TX/RX bit stream over physical media&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;IEEE 802&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The key to protocol families following OSI model is that communication occurs logically at same level of the protocol between sender and receiver, while services from lower level implement it. Just like abstract data types which simplifies the programmer’s task by hiding the implementation details of the data type, offering services needed by upper layer at each protocol layer makes the standard easier to understand and implement with cross industry compatibility, especially for lower level protocol vendors.&lt;/p&gt;

&lt;p&gt;For 20 years since mid 1990s, Internet has enjoyed exponential growth thanks to the dominant position of TCP/IP. Network vendors like Cisco took lead and protocols are added and expanded with a bottom up approach to protect the investment in lower level infrastructures. It is until recent years we see some challenges and movements against long-standing TCP/IP stack and traditional network infrastructures (both topology and component levels), driven by OTT providers’ performance, scalability and fault tolerance demands.&lt;/p&gt;

&lt;p&gt;The analysis for the huge success of AWS, Azure, GCP and Ali cloud in the past 5-10 years deserves a dedicate study series but here is one important factor from technology point of view: they just need purposely built network for their intent business need, so they built proprietary homogeneous network infrastructure from scratch with optimized and simplified protocol stack, achieving cost, power consumption and networking efficiency.&lt;/p&gt;

&lt;p&gt;It is on the right track but start to show limitations facing challenges from:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Data volume and dispersal driven by AI and IoT&lt;/li&gt;
  &lt;li&gt;Dynamic business logic driven by tenant IT migration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simply put, the &lt;strong&gt;&lt;em&gt;“simplification”&lt;/em&gt;&lt;/strong&gt; approach OTT providers have enjoyed for their past success is just not enough when facing these new challenges, which demands &lt;strong&gt;REAL&lt;/strong&gt; application driven design, with &lt;strong&gt;Top Down&lt;/strong&gt; principle.&lt;/p&gt;

&lt;p&gt;Back to OSI model, we have to abandon the assumption of TCP/IP, Ethernet, etc and go back to basic:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Layers are for separation of responsibilities in a hierarchical way&lt;/li&gt;
  &lt;li&gt;Upper layer should not aware or concern about lower layer&lt;/li&gt;
  &lt;li&gt;Lower layer is responsible of fulfilling or rejecting the requests from upper layer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Which means, instead of the bottom-up approach where upper layer operates based on what lower level offers, upper layer operates purely based on its own need and send only intent to lower layer, where lower layer has the flexibility to choose available and viable technology to fulfill or reject the request.&lt;/p&gt;

&lt;p&gt;Think of a future where we can have harmonized heterogeneous network clusters (devices, topologies or protocols) within data centers and extend into edge, campus even SoC, tailored for different compute-storage usage, totally transparent to applications layer; Think of a laptop where all bandwidth of wired and available WiFi band can be utilized simultaneously; Think of google-search-like information query from application; Think of instructions rather than data been networked to fulfill the request using remote data, etc.&lt;/p&gt;

&lt;p&gt;This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">Reflection on OSI model In the world of inter-networking, the most popular standard has to be TCP/IP protocol, which forms the basis of the Internet connecting billions of computers and devices around the world. It’s so popular and vital to our daily life now a days that it’s used even when communication is local across compatible networks. For example, popular network file system NFS uses IP protocol even though it’s used mainly in homogenous ethernet LAN environment. The software standards like TCP/IP allowing reliable communication without demanding reliable networks is the key enabling technologies for inter-networking. Looking back the standard battle with ATM in 1990s, one key success factor is it’s decomposed layered hierarchy. Each layer taking responsibility for just a portion of the overall communication task. To avoid ambiguous in terms, Open System Interconnect (OSI) model is developed which describes networks as a series of layers: Layer number layer name Main function Example protocol 7 Application Application running over network DNS, Web 6 Presentation Translate between Application and network format   5 Session Session lifecycle management across network RPC,named pipes 4 Transport Additional connection below session layer TCP 3 Network Translate between logic address/name to physical address IP 2 Data Link Transform between packet and bits Ethernet 1 Physical TX/RX bit stream over physical media IEEE 802 The key to protocol families following OSI model is that communication occurs logically at same level of the protocol between sender and receiver, while services from lower level implement it. Just like abstract data types which simplifies the programmer’s task by hiding the implementation details of the data type, offering services needed by upper layer at each protocol layer makes the standard easier to understand and implement with cross industry compatibility, especially for lower level protocol vendors. For 20 years since mid 1990s, Internet has enjoyed exponential growth thanks to the dominant position of TCP/IP. Network vendors like Cisco took lead and protocols are added and expanded with a bottom up approach to protect the investment in lower level infrastructures. It is until recent years we see some challenges and movements against long-standing TCP/IP stack and traditional network infrastructures (both topology and component levels), driven by OTT providers’ performance, scalability and fault tolerance demands. The analysis for the huge success of AWS, Azure, GCP and Ali cloud in the past 5-10 years deserves a dedicate study series but here is one important factor from technology point of view: they just need purposely built network for their intent business need, so they built proprietary homogeneous network infrastructure from scratch with optimized and simplified protocol stack, achieving cost, power consumption and networking efficiency. It is on the right track but start to show limitations facing challenges from: Data volume and dispersal driven by AI and IoT Dynamic business logic driven by tenant IT migration Simply put, the “simplification” approach OTT providers have enjoyed for their past success is just not enough when facing these new challenges, which demands REAL application driven design, with Top Down principle. Back to OSI model, we have to abandon the assumption of TCP/IP, Ethernet, etc and go back to basic: Layers are for separation of responsibilities in a hierarchical way Upper layer should not aware or concern about lower layer Lower layer is responsible of fulfilling or rejecting the requests from upper layer Which means, instead of the bottom-up approach where upper layer operates based on what lower level offers, upper layer operates purely based on its own need and send only intent to lower layer, where lower layer has the flexibility to choose available and viable technology to fulfill or reject the request. Think of a future where we can have harmonized heterogeneous network clusters (devices, topologies or protocols) within data centers and extend into edge, campus even SoC, tailored for different compute-storage usage, totally transparent to applications layer; Think of a laptop where all bandwidth of wired and available WiFi band can be utilized simultaneously; Think of google-search-like information query from application; Think of instructions rather than data been networked to fulfill the request using remote data, etc. This is a challenging time for networking, but it’s also a perfect time for breaking away: Welcome to an era of converged compute, storage and networking, friend!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">NCS Category readme</title><link href="http://0.0.0.0:4000/portfolio/posts/ncs-readme" rel="alternate" type="text/html" title="NCS Category readme" /><published>2020-05-11T00:00:00+00:00</published><updated>2020-05-11T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/NCS-Readme</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/ncs-readme">&lt;h2 id=&quot;readme-for-ncd-category&quot;&gt;README for NCD Category&lt;/h2&gt;

&lt;p&gt;NCS stands for Networked Compute and Storage, representing my interest in converged Compute, Data and networking infrastructure design.&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Networked Compute and Storage" /><category term="Insight" /><category term="Technology" /><category term="Solution" /><summary type="html">README for NCD Category NCS stands for Networked Compute and Storage, representing my interest in converged Compute, Data and networking infrastructure design.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Blog Categories and Tags</title><link href="http://0.0.0.0:4000/portfolio/posts/blog-categories-tags" rel="alternate" type="text/html" title="Blog Categories and Tags" /><published>2020-05-10T00:00:00+00:00</published><updated>2020-05-10T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/blog-categories-tags</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/blog-categories-tags">&lt;p&gt;After played with Jekyll for a while, I have decided on following structure to organize my blog posts for better navigation and grouping.&lt;/p&gt;

&lt;h2 id=&quot;category&quot;&gt;Category&lt;/h2&gt;

&lt;p&gt;Categories are used as top level classifier to seperate blog posts into main area of interests, at the time of written, I’m using following categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NCS&lt;/strong&gt; for Networked Compute &amp;amp; Storage&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Knowledge Graph&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exploration&lt;/strong&gt; serves as a kitchen sink for all study, hobby etc for now&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tag&quot;&gt;Tag&lt;/h2&gt;

&lt;p&gt;Tags are attributes helping to further filtering/grouping posts based on their characteristics. There is &lt;strong&gt;&lt;em&gt;NO&lt;/em&gt;&lt;/strong&gt; real differences between category and tag, I choose some as categories merely to group contents by my major areas of interest first.&lt;/p&gt;

&lt;p&gt;I split Tags into 4 dimensions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To what extent:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Insight&lt;/strong&gt; focus on Obervation, facts and impression&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Forsight&lt;/strong&gt; focus on deepening and broadening the analysis, forming opinion, prediction and design&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Practice&lt;/strong&gt; forcus on test, evalution and discovery&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;From which angle/perspective:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Market&lt;/strong&gt; focus on market trend, customer demand&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Industry&lt;/strong&gt; focus on industry trend, solutions&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Technology&lt;/strong&gt; focus on fundamental acdamic research&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Applicable to what sub-area:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Usecase&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keywords (Multiple)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Liquid&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;DCN&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;DCI&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Edge&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Campus&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;em&gt;etc&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see tags within dimensions 1-3 are mutually exclusive by nature, so they are more like sub-categories. But with current jekyll limition, I will leave them as tags and explot other options like &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;paginate v2&lt;/a&gt; later.&lt;/p&gt;</content><author><name>Bin Liang</name><email>fw.liangb@gmail.com</email></author><category term="Exploration" /><category term="Practice" /><category term="Technology" /><category term="Solution" /><category term="Jekyll" /><summary type="html">After played with Jekyll for a while, I have decided on following structure to organize my blog posts for better navigation and grouping. Category Categories are used as top level classifier to seperate blog posts into main area of interests, at the time of written, I’m using following categories: NCS for Networked Compute &amp;amp; Storage Knowledge Graph Exploration serves as a kitchen sink for all study, hobby etc for now Tag Tags are attributes helping to further filtering/grouping posts based on their characteristics. There is NO real differences between category and tag, I choose some as categories merely to group contents by my major areas of interest first. I split Tags into 4 dimensions: To what extent: Insight focus on Obervation, facts and impression Forsight focus on deepening and broadening the analysis, forming opinion, prediction and design Practice forcus on test, evalution and discovery From which angle/perspective: Market focus on market trend, customer demand Industry focus on industry trend, solutions Technology focus on fundamental acdamic research Applicable to what sub-area: Infrastructure Solution Application Usecase Keywords (Multiple) Jekyll Liquid DCN DCI Edge Campus etc As you can see tags within dimensions 1-3 are mutually exclusive by nature, so they are more like sub-categories. But with current jekyll limition, I will leave them as tags and explot other options like paginate v2 later.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Markdown and HTML</title><link href="http://0.0.0.0:4000/portfolio/posts/markdown-and-html" rel="alternate" type="text/html" title="Markdown and HTML" /><published>2020-04-05T00:00:00+00:00</published><updated>2020-04-05T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/markdown-and-html</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/markdown-and-html">&lt;p&gt;Jekyll supports the use of &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.&lt;/p&gt;

&lt;p&gt;Tables have also been extended from Markdown:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;First Header&lt;/th&gt;
      &lt;th&gt;Second Header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here’s an example of an image, which is included using Markdown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/pexels/book-glass.jpeg&quot; alt=&quot;Image of a glass on a book&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Highlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// count to ten&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// count to twenty&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Type on Strap uses KaTeX to display maths. Equations such as \(S_n = a \times \frac{1-r^n}{1-r}\) can be displayed inline.&lt;/p&gt;

&lt;p&gt;Alternatively, they can be shown on a new line:&lt;/p&gt;

\[f(x) = \int \frac{2x^2+4x+6}{x-2}\]</content><author><name>Sylhare</name></author><category term="Exploration" /><category term="Practice" /><category term="Technology" /><category term="Solution" /><category term="Jekyll" /><summary type="html">Jekyll supports the use of Markdown with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows. Tables have also been extended from Markdown: First Header Second Header Content Cell Content Cell Content Cell Content Cell Here’s an example of an image, which is included using Markdown: Highlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default. // count to ten for (var i = 1; i &amp;lt;= 10; i++) { console.log(i); } // count to twenty var j = 0; while (j &amp;lt; 20) { j++; console.log(j); } Type on Strap uses KaTeX to display maths. Equations such as \(S_n = a \times \frac{1-r^n}{1-r}\) can be displayed inline. Alternatively, they can be shown on a new line: \[f(x) = \int \frac{2x^2+4x+6}{x-2}\]</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/software.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/software.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="en"><title type="html">Color Post</title><link href="http://0.0.0.0:4000/portfolio/posts/color-post" rel="alternate" type="text/html" title="Color Post" /><published>2020-04-04T00:00:00+00:00</published><updated>2020-04-04T00:00:00+00:00</updated><id>http://0.0.0.0:4000/portfolio/posts/color-post</id><content type="html" xml:base="http://0.0.0.0:4000/portfolio/posts/color-post">&lt;h1 id=&quot;what-a-colorful-post&quot;&gt;What a colorful post!&lt;/h1&gt;

&lt;p&gt;This is an idea that came from &lt;a href=&quot;https://github.com/xukimseven/HardCandy-Jekyll&quot;&gt;xukimseven/HardCandy-Jekyll&lt;/a&gt; 
looking at this cheerful and colorful them, I wanted to enable something similar for mine.&lt;/p&gt;

&lt;p&gt;You can go fork and star hers too! 😉&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;

&lt;p&gt;Basically you need to add just one thing, the color:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Color Post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;brown&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It can either be a html color like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brown&lt;/code&gt; (which look like red to me). Or with the rgb:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Color Post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rgb(165,42,42)&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The background used is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lineart.png&lt;/code&gt; from &lt;a href=&quot;https://github.com/xukimseven&quot;&gt;xukimseven&lt;/a&gt; you can edit it in the config file. 
If you want another one, put it in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/assets/img&lt;/code&gt; as well.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;⚠️ It’s a bit hacking the css in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post.html&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Sylhare</name></author><category term="Exploration" /><category term="Practice" /><category term="Technology" /><category term="Solution" /><category term="Jekyll" /><category term="Markdown" /><summary type="html">What a colorful post! This is an idea that came from xukimseven/HardCandy-Jekyll looking at this cheerful and colorful them, I wanted to enable something similar for mine. You can go fork and star hers too! 😉</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://0.0.0.0:4000/assets/img/mac.jpg" /><media:content medium="image" url="http://0.0.0.0:4000/assets/img/mac.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>